plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.lambda.common'
    compileSdk 34

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding = true
        buildConfig = true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$material"

    implementation "com.airbnb.android:lottie:$lottie"
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"
    implementation "com.squareup.retrofit2:converter-gson:$converter_gson"
    implementation "com.github.bumptech.glide:glide:$glide"

    implementation(platform("com.google.firebase:firebase-bom:$firebase_bom"))
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation("com.google.firebase:firebase-config")

    implementation "com.lambda.common:lambdaad:$lambdaad"
    implementation "com.lambda.common:billing-google:$billing_google"
    implementation("com.lambda.common:http:$http")
    implementation("com.lambda.common:event:$event") {
        exclude group: 'com.lambda.common', module: 'http'
    }
    implementation "com.applovin:applovin-sdk:$applovin_sdk"
    implementation "com.google.android.gms:play-services-ads:$play_services_ads"
}